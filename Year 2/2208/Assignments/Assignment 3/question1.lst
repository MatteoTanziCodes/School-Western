


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             question1, CODE, READWRITE
    2 00000000                 ENTRY
    3 00000000         
    4 00000000 E59F1054        LDR              r1, =UPC    ; load r1 with the 
                                                            UPC
    5 00000004         
    6 00000004 E4D13001 
                       sumLoop LDRB             r3, [r1], #1 ; start a loop tha
                                                            t sums the first di
                                                            git plus every othe
                                                            r digit, this line 
                                                            gets the first digi
                                                            t 
    7 00000008 E3530000        CMP              r3, 0x00    ; check if it is th
                                                            e end of the string
                                                            
    8 0000000C 0A000005        BEQ              addVals     ; if it is, go to a
                                                            dd vals
    9 00000010 E4D14001        LDRB             r4, [r1], #1 ; this line gets t
                                                            he second digit in 
                                                            the string
   10 00000014         
   11 00000014 E2444030        SUB              r4, #48     ; convert the hex v
                                                            alues to decimal va
                                                            lues
   12 00000018 E2433030        SUB              r3, #48     ; convert the hex v
                                                            alues to decimal va
                                                            lues
   13 0000001C         
   14 0000001C E0855003        ADD              r5, r5, r3  ; add the current n
                                                            umber to the previo
                                                            us number and store
                                                             (this adds 1,3,5,7
                                                            ,9 and 11)
   15 00000020 E0822004        ADD              r2, r2, r4  ; add the current n
                                                            umber to the previo
                                                            us number and store
                                                             (this adds 2,4,6,8
                                                            ,10 and 12)
   16 00000024 EAFFFFF6        b                sumLoop     ; return to the top
                                                             of the while loop
   17 00000028         
   18 00000028 E0855085 
                       addVals ADD              r5, r5, LSL#1 ; multiply the fi
                                                            rst sum by 3
   19 0000002C E0822005        ADD              r2, r5      ; add the sums toge
                                                            ther and store the 
                                                            value in r2
   20 00000030         
   21 00000030 E242200A 
                       sumDiv  SUB              r2, #10     ; start a loop that
                                                             subtracts the valu
                                                            e by 10
   22 00000034 E3520000        CMP              r2, #0      ; compare the value
                                                             to 0
   23 00000038         
   24 00000038 BA000002        BLT              invalid     ; if r2 isn't a mul
                                                            tiple of 10, then t
                                                            he upc code is inva



ARM Macro Assembler    Page 2 


                                                            lid
   25 0000003C 1AFFFFFB        BNE              sumDiv      ; loop until it is 
                                                            either equal to or 
                                                            less than 0. if it 
                                                            is equal to zero, c
                                                            ontinue
   26 00000040         
   27 00000040 E3A00001        MOV              r0, #1      ; if the upc is val
                                                            id, store the value
                                                             1 in r0
   28 00000044 EA000000        b                exit        ; skip lines until 
                                                            exit
   29 00000048         
   30 00000048 E3A00002 
                       invalid MOV              r0,#2       ; if the upc is inv
                                                            alid store 2 in the
                                                             register r0
   31 0000004C         
   32 0000004C EAFFFFFE 
                       exit    b                exit        ; end of program
   33 00000050         
   34 00000050 30 36 30 
              33 38 33 
              37 35 35 
              35 37 37 UPC     DCB              "060383755577" ; store the upc 
                                                            string with the lab
                                                            el UPC
   35 0000005C                 END
              00000000 
Command Line: --debug --xref --bi --apcs=interwork --depend=.\question1.d -o.\q
uestion1.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include --predefine="__EV
AL SETA 1" --list=.\question1.lst question1.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

UPC 00000050

Symbol: UPC
   Definitions
      At line 34 in file question1.s
   Uses
      At line 4 in file question1.s
Comment: UPC used once
addVals 00000028

Symbol: addVals
   Definitions
      At line 18 in file question1.s
   Uses
      At line 8 in file question1.s
Comment: addVals used once
exit 0000004C

Symbol: exit
   Definitions
      At line 32 in file question1.s
   Uses
      At line 28 in file question1.s
      At line 32 in file question1.s

invalid 00000048

Symbol: invalid
   Definitions
      At line 30 in file question1.s
   Uses
      At line 24 in file question1.s
Comment: invalid used once
question1 00000000

Symbol: question1
   Definitions
      At line 1 in file question1.s
   Uses
      None
Comment: question1 unused
sumDiv 00000030

Symbol: sumDiv
   Definitions
      At line 21 in file question1.s
   Uses
      At line 25 in file question1.s
Comment: sumDiv used once
sumLoop 00000004

Symbol: sumLoop
   Definitions
      At line 6 in file question1.s
   Uses
      At line 16 in file question1.s
Comment: sumLoop used once
7 symbols
340 symbols in table
