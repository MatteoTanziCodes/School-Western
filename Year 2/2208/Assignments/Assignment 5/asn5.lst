


ARM Macro Assembler    Page 1 


    1 00000000         ;-------------------------------------------------------
                       -------------------------
    2 00000000                 AREA             power, CODE, READWRITE
    3 00000000                 ENTRY
    4 00000000 E28FD080 
                       Main    ADR              sp,stack    ;define the stack
    5 00000004 E3A02002        MOV              r2, #x      ;prepare the parame
                                                            ter n
    6 00000008 E3A00001        MOV              r0, #0x1
    7 0000000C E3A01002        MOV              r1, #n      ;prepare the parame
                                                            ter x
    8 00000010 EB000002        BL               Power       ; Calculate the pow
                                                            er of x
    9 00000014 E28F1068        ADR              r1,Result   ; Get the address o
                                                            f the result variab
                                                            le
   10 00000018 E5810000        STR              r0,[r1]     ; Store the final c
                                                            alculation in the r
                                                            esult variable
   11 0000001C EAFFFFFE 
                       Loop    B                Loop        ; infinite loop
   12 00000020         ;-------------------------------------------------------
                       -------------------------
   13 00000020                 AREA             power, CODE, READWRITE
   14 00000020 E8AD4807 
                       Power   STMEA            sp!,{r0,r1,r2,fp,lr} ; Push the
                                                             general register, 
                                                            frame pointer regis
                                                            ter, and link regis
                                                            ter onto the stack
   15 00000024 E1A0B00D        MOV              fp,sp       ; Set frame pointer
                                                             for function call
   16 00000028 E51B1010        LDR              r1,[fp,#-0x10] ; Get the parame
                                                            ter from stack
   17 0000002C         
   18 0000002C E3510000 
                       Base    CMP              r1,#0       ; Base case - when 
                                                            exponent n is 0
   19 00000030 03A01001        MOVEQ            r1,#1       ; If the base case 
                                                            is true then set re
                                                            turn value to 1
   20 00000034 0B000010        BLEQ             Return      ; Branch to the ret
                                                            urn section  
   21 00000038 E3110001        TST              r1,#1
   22 0000003C 0A000006        BEQ              Even        ; Branch to Odd sec
                                                            tion
   23 00000040 1AFFFFFF        BNE              Odd         ; Otherwise, branch
                                                             to Even section
   24 00000044         
   25 00000044 E2411001 
                       Odd     SUB              r1,#1       ; Subtract 1 from e
                                                            xponent n   
   26 00000048 EBFFFFF4        BL               Power       ; Recursive call to
                                                             Power function wit
                                                            h new n value
   27 0000004C E59D1000        LDR              r1,[sp,#0]  ; Load result value
                                                             into r0 before pop
                                                            ping it from stack
   28 00000050 E0000291        MUL              r0,r1,r2    ; Calculate the res



ARM Macro Assembler    Page 2 


                                                            ult value
   29 00000054 E50B0014        STR              r0,[fp,#-0x14] ; Push the value
                                                             onto stack
   30 00000058 EB000007        BL               Return      ; Branch to return 
                                                            section
   31 0000005C         
   32 0000005C E1A010A1 
                       Even    LSR              r1,r1,#1    ; Divide the expone
                                                            nt by 2
   33 00000060 E8AD4807        STMEA            sp!,{r0,r1,r2,fp,lr}
   34 00000064 E28BB014        ADD              r11,#0x14
   35 00000068 EBFFFFEC        BL               Power       ; Recursive call to
                                                             Power function wit
                                                            h new n value
   36 0000006C E59D1000        LDR              r1,[sp,#0]  ; Load result value
                                                             into r0 before pop
                                                            ping it from stack
   37 00000070 E0000291        MUL              r0,r1,r2    ; Calculate the res
                                                            ult value
   38 00000074 E50B0014        STR              r0,[fp,#-0x14] ; Push the value
                                                             onto stack
   39 00000078 EBFFFFFF        BL               Return      ; Branch to return 
                                                            section
   40 0000007C         
   41 0000007C E1A0D00B 
                       Return  MOV              sp,fp       ; Collapse working 
                                                            spaces for function
                                                             call
   42 00000080 E93D8807        LDMEA            sp!,{r0,r1,r2,fp,pc} ; Restore/
                                                            reload initial sett
                                                            ings of registers; 
                                                            return to caller
   43 00000084         ;-------------------------------------------------------
                       -------------------------
   44 00000084                 AREA             power, DATA, READWRITE
   45 00000084 00000000 
                       Result  DCD              0x00        ; the final result
   46 00000088 00000000 
                       stack   DCD              0x00        ; The initial stack
                                                             position
   47 0000008C 00000002 
                       n       EQU              2           ; Set the value for
                                                             n
   48 0000008C 00000002 
                       x       EQU              2           ; set the value for
                                                             x
   49 0000008C         ;-------------------------------------------------------
                       -------------------------
   50 0000008C                 END
Command Line: --debug --xref --bi --apcs=interwork --depend=.\asn5.d -o.\asn5.o
 -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include --predefine="__EVAL SETA 1"
 --list=.\asn5.lst asn5.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Base 0000002C

Symbol: Base
   Definitions
      At line 18 in file asn5.s
   Uses
      None
Comment: Base unused
Even 0000005C

Symbol: Even
   Definitions
      At line 32 in file asn5.s
   Uses
      At line 22 in file asn5.s
Comment: Even used once
Loop 0000001C

Symbol: Loop
   Definitions
      At line 11 in file asn5.s
   Uses
      At line 11 in file asn5.s
Comment: Loop used once
Main 00000000

Symbol: Main
   Definitions
      At line 4 in file asn5.s
   Uses
      None
Comment: Main unused
Odd 00000044

Symbol: Odd
   Definitions
      At line 25 in file asn5.s
   Uses
      At line 23 in file asn5.s
Comment: Odd used once
Power 00000020

Symbol: Power
   Definitions
      At line 14 in file asn5.s
   Uses
      At line 8 in file asn5.s
      At line 26 in file asn5.s
      At line 35 in file asn5.s

Result 00000084

Symbol: Result
   Definitions
      At line 45 in file asn5.s
   Uses
      At line 9 in file asn5.s
Comment: Result used once
Return 0000007C



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: Return
   Definitions
      At line 41 in file asn5.s
   Uses
      At line 20 in file asn5.s
      At line 30 in file asn5.s
      At line 39 in file asn5.s

power 00000000

Symbol: power
   Definitions
      At line 2 in file asn5.s
   Uses
      None
Comment: power unused
stack 00000088

Symbol: stack
   Definitions
      At line 46 in file asn5.s
   Uses
      At line 4 in file asn5.s
Comment: stack used once
10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

n 00000002

Symbol: n
   Definitions
      At line 47 in file asn5.s
   Uses
      At line 7 in file asn5.s
Comment: n used once
x 00000002

Symbol: x
   Definitions
      At line 48 in file asn5.s
   Uses
      At line 5 in file asn5.s
Comment: x used once
2 symbols
343 symbols in table
