


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             question1, CODE, READONLY
    2 00000000                 ENTRY
    3 00000000 00000000 
                       null    EQU              0x00        ; create a null con
                                                            stant to check for 
                                                            eos
    4 00000000 00000074 
                       t       EQU              0x74        ; create a 't' for 
                                                            comparison
    5 00000000 00000020 
                       blank   EQU              0x20        ; create a 'space' 
                                                            for comparison
    6 00000000 E28F1060        ADR              r1, STRING1 ; point at string 1
                                                            
    7 00000004 E28F207A        ADR              r2, STRING2 ; point at string 2
                                                            
    8 00000008 E59F30F8        LDR              r3, =0x74686520 ; store "the " 
                                                            for comparison
    9 0000000C E5D14000        LDRB             r4, [r1]    ; load the first ch
                                                            aracter
   10 00000010 E3540074        CMP              r4, #t      ; check if the firs
                                                            t character is a 't
                                                            '
   11 00000014 0A000005        BEQ              check       ; branch to check i
                                                            f "he " or "he\0" f
                                                            ollows
   12 00000018 E4D14001 
                       Loop    LDRB             r4, [r1], #1 ; load a character
                                                             of string 1
   13 0000001C E4C24001        STRB             r4, [r2], #1 ; store the charac
                                                            ter
   14 00000020 E3540000        CMP              r4, #null   ; check if it's the
                                                             end of string
   15 00000024 0A00000E        BEQ              stop        ; end of string the
                                                            n terminate
   16 00000028 E3540020        CMP              r4, #blank  ; check for space b
                                                            ecause "the " or "t
                                                            he\0" may follow
   17 0000002C 1AFFFFF9        BNE              Loop        ; keep looping unti
                                                            l the character is 
                                                            a space
   18 00000030 E1A05001 
                       check   MOV              r5, r1      ; save current posi
                                                            tion of string 1 po
                                                            inter, in case we n
                                                            eed to backtrack
   19 00000034 E3A06000        MOV              r6, #0      ; point to a string
                                                             from string 1's ne
                                                            xt 4 characters
   20 00000038 E4D14001 
                       string  LDRB             r4, [r1], #1 ; build the string
                                                             one character at a
                                                             time
   21 0000003C E3540000        CMP              r4, #null   ; check if it's the
                                                             end of string
   22 00000040 059F30C4        LDREQ            r3, =0x74686500 ; if the string
                                                             is null and is "th
                                                            e\0", it will be re
                                                            moved



ARM Macro Assembler    Page 2 


   23 00000044 E0866004        ADD              r6, r4      ; append character 
                                                            to the string
   24 00000048 E3560201        CMP              r6, #0x10000000 ; check if stri
                                                            ng contains less th
                                                            an 4 characters
   25 0000004C B1A06406        LSLLT            r6, #8      ; shift the string 
                                                            1 byte left if it's
                                                             less than 4 charac
                                                            ters
   26 00000050 BAFFFFF8        BLT              string      ; continue to build
                                                             the string until i
                                                            t's full
   27 00000054 E1560003        CMP              r6, r3      ; check if string i
                                                            s "the " or "the\0"
                                                            
   28 00000058 02411001        SUBEQ            r1, #1      ; if so decrease st
                                                            ring 1's pointer to
                                                             preserve space
   29 0000005C 11A01005        MOVNE            r1, r5      ; otherwise, string
                                                             should not be remo
                                                            ved so return to st
                                                            ring 1's pointer to
                                                             initial position
   30 00000060 EAFFFFEC        B                Loop        ; repeat character 
                                                            processing until st
                                                            ring 1's null chara
                                                            cter is reached
   31 00000064 EAFFFFFE 
                       stop    B                stop        ; terminate the pro
                                                            gram
   32 00000068 61 6E 64 
              20 74 68 
              65 20 6D 
              61 6E 20 
              73 61 69 
              64 20 74 
              68 65 79 
              20 6D 75 
              73 74 20 
              67 6F    STRING1 DCB              "and the man said they must go"
   33 00000085 00      EoS     DCB              0x00
   34 00000086 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 3 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       STRING2 space            0x7f
   35 00000105 00 00 00        ALIGN
   36 00000108                 END
              74686520 
              74686500 
Command Line: --debug --xref --bi --apcs=interwork --depend=.\question1.d -o.\q
uestion1.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include --predefine="__EV
AL SETA 1" --list=.\question1.lst question1.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

EoS 00000085

Symbol: EoS
   Definitions
      At line 33 in file question1.s
   Uses
      None
Comment: EoS unused
Loop 00000018

Symbol: Loop
   Definitions
      At line 12 in file question1.s
   Uses
      At line 17 in file question1.s
      At line 30 in file question1.s

STRING1 00000068

Symbol: STRING1
   Definitions
      At line 32 in file question1.s
   Uses
      At line 6 in file question1.s
Comment: STRING1 used once
STRING2 00000086

Symbol: STRING2
   Definitions
      At line 34 in file question1.s
   Uses
      At line 7 in file question1.s
Comment: STRING2 used once
check 00000030

Symbol: check
   Definitions
      At line 18 in file question1.s
   Uses
      At line 11 in file question1.s
Comment: check used once
question1 00000000

Symbol: question1
   Definitions
      At line 1 in file question1.s
   Uses
      None
Comment: question1 unused
stop 00000064

Symbol: stop
   Definitions
      At line 31 in file question1.s
   Uses
      At line 15 in file question1.s
      At line 31 in file question1.s

string 00000038



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: string
   Definitions
      At line 20 in file question1.s
   Uses
      At line 26 in file question1.s
Comment: string used once
8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

blank 00000020

Symbol: blank
   Definitions
      At line 5 in file question1.s
   Uses
      At line 16 in file question1.s
Comment: blank used once
null 00000000

Symbol: null
   Definitions
      At line 3 in file question1.s
   Uses
      At line 14 in file question1.s
      At line 21 in file question1.s

t 00000074

Symbol: t
   Definitions
      At line 4 in file question1.s
   Uses
      At line 10 in file question1.s
Comment: t used once
3 symbols
344 symbols in table
