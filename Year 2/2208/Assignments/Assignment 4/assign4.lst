


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             assign4, CODE, READWRITE
    2 00000000                 ENTRY
    3 00000000         
    4 00000000 E28F0068 
                       Pointers
                               ADR              r0, STRING1 ; r0 stores the add
                                                            ress of the beginni
                                                            ng of string1
    5 00000004 E28F2078        ADR              r2, STRING2 ; r2 stores the add
                                                            ress of the beginni
                                                            ng of string2
    6 00000008         
    7 00000008 E5D04000 
                       baseCase
                               LDRB             r4, [r0]    ; r4 hold the value
                                                             for the first char
                                                            acter byte in the s
                                                            tring
    8 0000000C E3540074        CMP              r4, #t      ; compare the ascii
                                                             values of the firs
                                                            t byte and the asci
                                                            i value for t
    9 00000010 0A000005        BEQ              regStr      ; if the ascii valu
                                                            es are equal, call 
                                                            regStr to set r1 to
                                                             0 and save the cur
                                                            rent pointer addres
                                                            s
   10 00000014         
   11 00000014 E4D04001 
                       findSpc LDRB             r4, [r0], #1 ; load the next ch
                                                            ar into r4
   12 00000018 E4C24001        STRB             r4, [r2], #1 ; store the char i
                                                            nto the address tha
                                                            t r2 points to (beg
                                                            inning of string2)
   13 0000001C E3540000        CMP              r4, #0x00   ; Check to see if t
                                                            he char is the end 
                                                            of the string
   14 00000020 0A000011        BEQ              exit        ; if it is the end 
                                                            of the string, exit
                                                             the program
   15 00000024 E3540020        CMP              r4, #gap    ; Check to see if t
                                                            he char is a space
   16 00000028 1AFFFFF9        BNE              findSpc     ; continue to loop 
                                                            until you find a sp
                                                            ace
   17 0000002C         
   18 0000002C E3A01000 
                       regStr  MOV              r1, #0      ; set register 1 to
                                                             0
   19 00000030 E1A05000        MOV              r5, r0      ; store the current
                                                             pointer address
   20 00000034         
   21 00000034 E2877001 
                       cmpTxt  ADD              r7, #1      ; Increment teh cou
                                                            nter for r7
   22 00000038 E59F30C4        LDR              r3, =0x74686520 ; set the compa
                                                            ritor for "the " wh



ARM Macro Assembler    Page 2 


                                                            ich the value in r1
                                                             will compare to
   23 0000003C E4D04001        LDRB             r4, [r0], #1 ; load the next ch
                                                            ar into r4
   24 00000040 E3540000        CMP              r4, #0x00   ; check to see if i
                                                            t is a null value i
                                                            f so, change the co
                                                            mparitor to "the0\"
                                                             
   25 00000044 059F30BC        LDREQ            r3, =0x74686500 ; change the co
                                                            mparitor to "the0\"
                                                            
   26 00000048 E0811004        ADD              r1, r4      ; append the value 
                                                            in r4, the current 
                                                            char into the compa
                                                            ritor
   27 0000004C E3570004        CMP              r7, #4      ; check to see if t
                                                            he comparitor has 4
                                                             bytes in it yet
   28 00000050 11A01401        LSLNE            r1, #8      ; if it has less th
                                                            an 4 bytes shift th
                                                            e value so that the
                                                            re is 1 byte at the
                                                             end to store a new
                                                             char
   29 00000054 1AFFFFF6        BNE              cmpTxt      ; loop back to top 
                                                            if the comparitor i
                                                            sn't full
   30 00000058 02477004        SUBEQ            r7,#4       ; clear the counter
                                                            
   31 0000005C E1510003        CMP              r1, r3      ; compare the value
                                                            s in the comparitor
                                                            s when they are ful
                                                            l
   32 00000060 02400001        SUBEQ            r0, #1      ; if they are equal
                                                             move the pointer t
                                                            o the next value
   33 00000064 11A00005        MOVNE            r0, r5      ; if they are not e
                                                            qual, move to point
                                                            er back to the posi
                                                            tion after the spac
                                                            e
   34 00000068 EAFFFFE9        B                findSpc     ; loop until the nu
                                                            ll character is rea
                                                            ched
   35 0000006C EAFFFFFE 
                       exit    b                exit        ; END
   36 00000070         
   37 00000070 74 68 65 
              20 74 68 
              65 20 74 
              68 65 20 
              31 32 33 
              20 74 68 
              65       STRING1 DCB              "the the the 123 the" ; String1
                                                            
   38 00000083 00      EoS     DCB              0x00        ; null space at the
                                                             end of the string
   39 00000084 00 00 00 



ARM Macro Assembler    Page 3 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       STRING2 space            0x7F        ; just allocating 1
                                                            27 bytes 
   40 00000103 00000020 
                       gap     EQU              0x20        ; Ascii value for a
                                                             space
   41 00000103 00000074 
                       t       EQU              0x74        ; ascii value for a
                                                             t
   42 00000103                 END
              00 74686520 
              74686500 
Command Line: --debug --xref --bi --apcs=interwork --depend=.\assign4.d -o.\ass
ign4.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include --predefine="__EVAL S
ETA 1" --list=.\assign4.lst assign4.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

EoS 00000083

Symbol: EoS
   Definitions
      At line 38 in file assign4.s
   Uses
      None
Comment: EoS unused
Pointers 00000000

Symbol: Pointers
   Definitions
      At line 4 in file assign4.s
   Uses
      None
Comment: Pointers unused
STRING1 00000070

Symbol: STRING1
   Definitions
      At line 37 in file assign4.s
   Uses
      At line 4 in file assign4.s
Comment: STRING1 used once
STRING2 00000084

Symbol: STRING2
   Definitions
      At line 39 in file assign4.s
   Uses
      At line 5 in file assign4.s
Comment: STRING2 used once
assign4 00000000

Symbol: assign4
   Definitions
      At line 1 in file assign4.s
   Uses
      None
Comment: assign4 unused
baseCase 00000008

Symbol: baseCase
   Definitions
      At line 7 in file assign4.s
   Uses
      None
Comment: baseCase unused
cmpTxt 00000034

Symbol: cmpTxt
   Definitions
      At line 21 in file assign4.s
   Uses
      At line 29 in file assign4.s
Comment: cmpTxt used once
exit 0000006C

Symbol: exit



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 35 in file assign4.s
   Uses
      At line 14 in file assign4.s
      At line 35 in file assign4.s

findSpc 00000014

Symbol: findSpc
   Definitions
      At line 11 in file assign4.s
   Uses
      At line 16 in file assign4.s
      At line 34 in file assign4.s

regStr 0000002C

Symbol: regStr
   Definitions
      At line 18 in file assign4.s
   Uses
      At line 9 in file assign4.s
Comment: regStr used once
10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

gap 00000020

Symbol: gap
   Definitions
      At line 40 in file assign4.s
   Uses
      At line 15 in file assign4.s
Comment: gap used once
t 00000074

Symbol: t
   Definitions
      At line 41 in file assign4.s
   Uses
      At line 8 in file assign4.s
Comment: t used once
2 symbols
345 symbols in table
